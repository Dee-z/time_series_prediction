'''
Train collapsed feature classifier on EEG binary seizure/not dataset


'''

# Default environment variables
# Can override with local env variables

EEG_VERSION = os.environ.get('EEG_VERSION', 'v20200501')
PROJECT_REPO_DIR = os.path.abspath(os.environ.get("PROJECT_REPO_DIR", "../../../../"))
PROJECT_CONDA_ENV_YAML = os.path.join(PROJECT_REPO_DIR, "ts_pred.yml")

EEG_DATASET_TOP_PATH = os.path.join(PROJECT_REPO_DIR, "datasets/eeg/")
EEG_DATASET_STD_PATH = os.path.join(EEG_DATASET_TOP_PATH, 'std', EEG_VERSION)

RESULTS_PATH = os.path.abspath('/tmp/html/')

item_list = [(k, v) for (k,v) in locals().items() if k.startswith('PROJECT_')]
for key, val in item_list:
    if key.startswith('PROJECT_'):
        print(val)
        os.environ[key] = val

rule train_and_evaluate_classifier:
    input:
        script=os.path.join(PROJECT_REPO_DIR, 'src', 'eval_classifier.py'),
        x_train_csv=os.path.join(EEG_DATASET_STD_PATH, 'x_train.csv'),
        x_test_csv=os.path.join(EEG_DATASET_STD_PATH, 'x_test.csv'),
        y_train_csv=os.path.join(EEG_DATASET_STD_PATH, 'y_train.csv'),
        y_test_csv=os.path.join(EEG_DATASET_STD_PATH, 'y_test.csv'),
        x_dict_json=os.path.join(EEG_DATASET_STD_PATH, 'Spec_CollapsedFeaturesPerSequence.json'),
        y_dict_json=os.path.join(EEG_DATASET_STD_PATH, 'Spec_OutcomesPerSequence.json')

    output:
        os.path.join(RESULTS_PATH, 'report.html')

    conda:
        PROJECT_CONDA_ENV_YAML

    shell:
        '''
        mkdir -p {{RESULTS_PATH}} && \
        python -u {input.script} \
            logistic_regression \
            --outcome_col_name seizure_binary_label \
            --output_dir {{RESULTS_PATH}} \
            --train_csv_files {input.x_train_csv},{input.y_train_csv} \
            --test_csv_files {input.x_test_csv},{input.y_test_csv} \
            --data_dict_files {input.x_dict_json},{input.y_dict_json} \
            --validation_size 0.1 \
            --n_splits 3 \
            --key_cols_to_group_when_splitting subject_id \
            --scoring roc_auc \
            --threshold_scoring balanced_accuracy \
            --grid_C 1e-9 1e-7 1e-5 0.001 0.01 0.1 1 10 100 1000 \
            --class_weight balanced \
        '''.replace("{{RESULTS_PATH}}", RESULTS_PATH)
